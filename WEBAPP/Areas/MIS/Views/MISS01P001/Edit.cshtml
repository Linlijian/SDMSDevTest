@using FluentBootstrap
@using WEBAPP.Helper
@using DataAccess.MIS
@using UtilityLib

@model MISS01P001Model
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutChildPage.cshtml";
}

@using (var form = Html.Bootstrap().Form().SetId("form1").SetHorizontal().Begin())
{
    @Html.AntiForgeryToken()
    @Html.GetVSMWidgetsBegin(Translation.MIS.MISS01P001.ISSUE_CALCULATE)
    using (var row1 = Html.Bootstrap().GridRow().Begin())
    {
        using (row1.GridColumn(6).Begin())
        {
            @form.InputNumberFor(m => m.NO).SetReadonly()
        }
        using (row1.GridColumn(6).Begin())
        {
            //@form.HiddenFor(m => m.USER_ID)
            @form.InputJAutocompleteFor(t => t.APP_CODE, isRequired: true).JAutoKeySource("AC_APPLICATION_CODE").JAutoBindField("COM_CODE").SetSelectOnly().SetReadonly()//.JAutoSetExtraParamsByCtrl("USER_ID")
        }
    }
    using (var row1 = Html.Bootstrap().GridRow().Begin())
    {
        using (row1.GridColumn(6).Begin())
        {
            @form.InputFor(m => m.ISSUE_BY, isRequired: true, addValidateMessage: true)
        }
        using (row1.GridColumn(6).Begin())
        {
            @form.SelectFor(t => t.ISSUE_TYPE, Model.ISSUE_TYPE_MODEL.ToSelectList("Value", "Text", Model.ISSUE_TYPE), isRequired: true, addValidateMessage: true)
        }
    }
    using (var row1 = Html.Bootstrap().GridRow().Begin())
    {
        using (row1.GridColumn(6).Begin())
        {
            @form.InputFor(m => m.STR_ISSUE_DATE, isRequired: true, addValidateMessage: true).SetControlLabel(Translation.MIS.MISS01P001.ISSUE_DATE).AddCss("input-append").SetReadonly()
            @form.HiddenFor(m => m.ISSUE_DATE)
        }
        using (row1.GridColumn(6).Begin())
        {
            @form.InputFor(m => m.ISSUE_DATE_PERIOD).SetReadonly()
        }
    }
    using (var row1 = Html.Bootstrap().GridRow().Begin())
    {
        using (row1.GridColumn(6).Begin())
        {
            @form.InputJAutocompleteFor(t => t.MODULE, isRequired: true, addValidateMessage: true).JAutoKeySource("AC_MISS01P001_001").JAutoBindField("MODULE").JAutoSetExtraParamsByCtrl("APP_CODE").JAutoFieldToInput(new
       {
           RESPONSE_BY = "RESPONSE_BY"
       }).SetSelectOnly()
            @form.HiddenFor(m => m.APP_CODE)
        }
        using (row1.GridColumn(6).Begin())
        {
            @form.InputFor(m => m.RESPONSE_BY).SetReadonly()
        }
    }
    using (var row1 = Html.Bootstrap().GridRow().Begin())
    {
        using (row1.GridColumn(6).Begin())
        {
            @form.InputFor(m => m.MENU)
        }
        using (row1.GridColumn(6).Begin())
        {
            @form.InputFor(m => m.PRG_NAME)
        }
    }
    using (var row1 = Html.Bootstrap().GridRow().Begin())
    {
        using (row1.GridColumn(6).Begin())
        {
            @form.InputNumberFor(m => m.ESSR_NO)
        }
        using (row1.GridColumn(6).Begin())
        {
            @form.InputFor(m => m.STR_RESPONSE_DATE, isRequired: true, addValidateMessage: true).SetControlLabel(Translation.MIS.MISS01P001.RESPONSE_DATE).AddCss("input-append").SetReadonly()
            @form.HiddenFor(m => m.RESPONSE_DATE)
        }

    }
    using (var row1 = Html.Bootstrap().GridRow().Begin())
    {
        using (row1.GridColumn(6).Begin())
        {
            @form.TextAreaFor(m => m.ROOT_CAUSE, 4)
        }
        using (row1.GridColumn(6).Begin())
        {
            @form.TextAreaFor(m => m.SOLUTION, 4)
        }
    }
    using (var row1 = Html.Bootstrap().GridRow().Begin())
    {
        using (row1.GridColumn(6).Begin())
        {
            @form.TextAreaFor(m => m.EFFECTS, 4)
        }
        using (row1.GridColumn(6).Begin())
        {
            @form.TextAreaFor(m => m.DETAIL, 4)
        }
    }
    @Html.GetVSMWidgetsEnd()
    using (var row1 = Html.Bootstrap().GridRow().Begin())
    {
        using (row1.GridColumn(6).Begin())
        {
            @Html.GetVSMWidgetsBegin(Translation.MIS.MISS01P001.ISSUE_PROPERTY)
            using (row1.GridColumn(12).Begin())
            {
                //autocomplete
                @form.InputJAutocompleteFor(t => t.PRIORITY, isRequired: true, addValidateMessage: true).JAutoKeySource("AC_MISS01P001_003").JAutoBindField("PRIORITY").JAutoSetExtraParamsByCtrl("APP_CODE").JAutoFieldToInput(new
           {
               RESPONSE_TARGET = "RESPONSE_TARGET",
               RESOLUTION_TARGET = "RESOLUTION_TARGET"
           }).SetSelectOnly()
                //@form.SelectFor(t => t.PRIORITY, Model.PRIORITY_MODEL.ToSelectList("Value", "Text", Model.PRIORITY), isRequired: true)

            }
            using (row1.GridColumn(12).Begin())
            {
                // @form.SelectFor(t => t.ISSUE_TYPE, Model.ISSUE_TYPE_MODEL.ToSelectList("Value", "Text", Model.ISSUE_TYPE), isRequired: true, addValidateMessage: true)
            }
            using (row1.GridColumn(12).Begin())
            {
                @form.InputFor(m => m.RESPONSE_TARGET).SetReadonly()
            }
            using (row1.GridColumn(12).Begin())
            {
                @form.InputFor(m => m.RESOLUTION_TARGET).SetReadonly()
            }
            using (row1.GridColumn(12).Begin())
            {
                @form.InputJAutocompleteFor(t => t.DEFECT, isRequired: true, addValidateMessage: true).JAutoKeySource("AC_MISS01P001_002").JAutoBindField("ISSUE_TYPE").JAutoSetExtraParamsByCtrl("APP_CODE").JAutoFieldToInput(new
           {
               MAN_PLM_SA = "MAN_PLM_SA",
               MAN_PLM_QA = "MAN_PLM_QA",
               MAN_PLM_PRG = "MAN_PLM_PRG"
           }).SetSelectOnly()
                // @form.SelectFor(t => t.DEFECT, Model.DEFECT_MODEL.ToSelectList("Value", "Text", Model.DEFECT), isRequired: true)
            }
            using (row1.GridColumn(12).Begin())
            {
                @form.InputNumberFor(m => m.MAN_PLM_SA, digits: 1, isRequired: true, addValidateMessage: true)
            }
            using (row1.GridColumn(12).Begin())
            {
                @form.InputNumberFor(m => m.MAN_PLM_QA, digits: 1, isRequired: true, addValidateMessage: true)
            }
            using (row1.GridColumn(12).Begin())
            {
                @form.InputNumberFor(m => m.MAN_PLM_PRG, digits: 1, isRequired: true, addValidateMessage: true)
            }
            using (row1.GridColumn(12).Begin())
            {
                @form.InputNumberFor(m => m.MAN_PLM_PL, digits: 1, isRequired: true, addValidateMessage: true)
            }
            using (row1.GridColumn(12).Begin())
            {
                @form.InputNumberFor(m => m.MAN_PLM_DBA, digits: 1, isRequired: true, addValidateMessage: true)
            }
            @Html.GetVSMWidgetsEnd()
        }
        using (row1.GridColumn(6).Begin())
        {
            @Html.GetVSMWidgetsBegin(Translation.MIS.MISS01P001.ISSUE_DATETIME)
            using (row1.GridColumn(12).Begin())
            {
                //@form.InputFor(m => m.STATUS)
            }
            using (row1.GridColumn(12).Begin())
            {
                @form.InputFor(m => m.STR_TARGET_DATE, isRequired: true, addValidateMessage: true).SetControlLabel(Translation.MIS.MISS01P001.TARGET_DATE).AddCss("input-append").SetReadonly()
                @form.HiddenFor(m => m.TARGET_DATE)
            }
            using (row1.GridColumn(12).Begin())
            {
                @form.InputFor(m => m.STR_CLOSE_DATE, addValidateMessage: true).SetControlLabel(Translation.MIS.MISS01P001.CLOSE_DATE).AddCss("input-append")
                @form.HiddenFor(m => m.CLOSE_DATE)
            }
            using (row1.GridColumn(12).Begin())
            {
                @form.InputFor(m => m.STR_RDEPLOY_PD, addValidateMessage: true).SetControlLabel(Translation.MIS.MISS01P001.DEPLOY_PD).AddCss("input-append")
                @form.HiddenFor(m => m.DEPLOY_PD)
            }
            using (row1.GridColumn(12).Begin())
            {
                @form.InputFor(m => m.STR_DEPLOY_QA, addValidateMessage: true).SetControlLabel(Translation.MIS.MISS01P001.DEPLOY_QA).AddCss("input-append")
                @form.HiddenFor(m => m.DEPLOY_QA)
            }
            using (row1.GridColumn(12).Begin())
            {
                // @form.TextAreaFor(m => m.FILE_ID, 2)
            }
            using (row1.GridColumn(12).Begin())
            {
                //@form.InputFileuploadFor(m => m.ISSUE_IMG, allowExt: "jpg,png")
            }
            using (row1.GridColumn(12).Begin())
            {
                @form.TextAreaFor(m => m.REMARK, 4)
            }
            @*using (row1.GridColumn(12).Begin())
                {
                    <div class="input-append date form_datetime">
                        <label>aaaa</label>
                        <input name="A" id="A" size="16" type="datetime" value="" readonly>
                        <span class="add-on"><i class="icon-th"></i></span>
                    </div>
                }*@
            @Html.GetVSMWidgetsEnd()
        }
    }
}

@section Scripts {

    <script type="text/javascript"
            src="@Url.Content("~/Scripts/master-datetimepicker.min.js")">
    </script>
    <script>

    $(document).ready(function () {
        //=========================CLOSE_DATE============================//
        $("#STR_CLOSE_DATE").JDatepicker();
        $("#STR_CLOSE_DATE").datetimepicker({
            format: "dd/mm/yyyy hh:ii:ss",
            showmeridian: true,
            autoclose: true,
            todaybtn: true,
            todayBtn: 1,
        });

        $("#STR_CLOSE_DATE").change(function () {
            $('#CLOSE_DATE').val($('#STR_CLOSE_DATE').val())
        })
        //=========================TARGET_DATE============================//
        $("#STR_TARGET_DATE").JDatepicker();
        $("#STR_TARGET_DATE").datetimepicker({
            format: "dd/mm/yyyy hh:ii:ss",
            showmeridian: true,
            autoclose: true,
            todaybtn: true,
            todayBtn: 1,
        });

        $("#STR_TARGET_DATE").change(function () {
            $('#TARGET_DATE').val($('#STR_CLOSE_DATE').val())
        })
        //=========================DEPLOY_PD============================//
        $("#STR_DEPLOY_QA").JDatepicker();
        $("#STR_DEPLOY_QA").datetimepicker({
            format: "dd/mm/yyyy hh:ii:ss",
            showmeridian: true,
            autoclose: true,
            todaybtn: true,
            todayBtn: 1,
        });

        $("#STR_DEPLOY_QA").change(function () {
            $('#DEPLOY_PD').val($('#STR_CLOSE_DATE').val())
        })
        //=========================DEPLOY_QA============================//
        $("#STR_RDEPLOY_PD").JDatepicker();
        $("#STR_RDEPLOY_PD").datetimepicker({
            format: "dd/mm/yyyy hh:ii:ss",
            showmeridian: true,
            autoclose: true,
            todaybtn: true,
            todayBtn: 1,
        });

        $("#STR_RDEPLOY_PD").change(function () {
            $('#DEPLOY_QA').val($('#STR_CLOSE_DATE').val())
        })
        //=========================RESPONSE_DATE============================//
        $("#STR_RESPONSE_DATE").JDatepicker();
        $("#STR_RESPONSE_DATE").datetimepicker({
            format: "dd/mm/yyyy hh:ii:ss",
            showmeridian: true,
            autoclose: true,
            todaybtn: true,
            todayBtn: 1,
        });

        $("#STR_RESPONSE_DATE").change(function () {
            $('#RESPONSE_DATE').val($('#STR_CLOSE_DATE').val())
        })
        //=========================ISSUE_DATE============================//
        $("#STR_ISSUE_DATE").JDatepicker();
        $("#STR_ISSUE_DATE").datetimepicker({
            format: "dd/mm/yyyy hh:ii:ss",
            showmeridian: true,
            autoclose: true,
            todaybtn: true,
            todayBtn: 1
        });
                //.on('changeDate', function (ev) {
//    $('#STR_RESPONSE_DATE').datetimepicker('setStartDate', $("#STR_ISSUE_DATE").val())});

        $("#STR_ISSUE_DATE").change(function () {
            $('#ISSUE_DATE').val($('#STR_ISSUE_DATE').val())
        })
        //=========================END============================//

        //set ISSUE_DATE
        $("#STR_ISSUE_DATE").change(function () {
            var date = $("#STR_ISSUE_DATE").val()
            var arr = date.split('/');
            var year = arr[2].split(' ')
            $("#ISSUE_DATE_PERIOD").val(year[0] + '-' + arr[1])
        })

        $("#STR_ISSUE_DATE").BetweenDateTime({
            from_ctrl: 'STR_ISSUE_DATE',
            to_ctrl: 'STR_RESPONSE_DATE',
        });

        $("#STR_TARGET_DATE").BetweenDateTime({
            from_ctrl: 'STR_RESPONSE_DATE',
            to_ctrl: 'STR_TARGET_DATE',
        });

        $("#STR_CLOSE_DATE").BetweenDateTime({
            from_ctrl: 'STR_RESPONSE_DATE',
            to_ctrl: 'STR_CLOSE_DATE',
        });

        $("#STR_RDEPLOY_PD").BetweenDateTime({
            from_ctrl: 'STR_RESPONSE_DATE',
            to_ctrl: 'STR_RDEPLOY_PD',
        });

        $("#STR_DEPLOY_QA").BetweenDateTime({
            from_ctrl: 'STR_RESPONSE_DATE',
            to_ctrl: 'STR_DEPLOY_QA',
        });

        $("#STR_DEPLOY_QA").BetweenDateTime({
            from_ctrl: 'STR_RESPONSE_DATE',
            to_ctrl: 'STR_DEPLOY_QA',
        });

    })

    $.fn.BetweenDateTime = function (options) {
        var val_more = $("[name=" + options.from_ctrl + "]").val();
        var val_less = $("[name=" + options.to_ctrl + "]").val();

        $("[name=" + options.from_ctrl + "]").datetimepicker({
            format: "dd/mm/yyyy hh:ii:ss",
            showmeridian: true,
            autoclose: true,
            todaybtn: true,
            todayBtn: 1
        }).on("hide", function (selected) {
            var val = $(this).val();
            if (val != undefined && val != null && val != "") {
                $("[name=" + options.to_ctrl + "]").datetimepicker("setStartDate", $.stringToDate(val));
            }
            else {
                $("[name=" + options.to_ctrl + "]").datetimepicker("setStartDate", -Infinity);
            }
        }).next().on(ace.click_event, function () {
            $(this).prev().focus();
        });

        $("[name=" + options.to_ctrl + "]").datetimepicker({
            format: "dd/mm/yyyy hh:ii:ss",
            showmeridian: true,
            autoclose: true,
            todaybtn: true,
            todayBtn: 1
        }).on("hide", function (selected) {
            var val = $(this).val();
            if (val != undefined && val != null && val != "") {
                $("[name=" + options.from_ctrl + "]").datetimepicker("setEndDate", $.stringToDate(val));
            }
            else {
                $("[name=" + options.from_ctrl + "]").datetimepicker("setEndDate", Infinity);
            }
        }).next().on(ace.click_event, function () {
            $(this).prev().focus();
        });
    };

        //===========================Control Readonly by status==============================

        //===================================================================================

    </script>

}

@section stylesheet{
    <link href="@Url.Content("~/Content/master-datetimepicker.min.css")" rel="stylesheet" />

}
}