@using FluentBootstrap
@using WEBAPP.Helper
@using DataAccess.MIS
@using UtilityLib

@model MISS01P001Model

@{
    ViewBag.Title = "Add";
    Layout = "~/Views/Shared/_LayoutChildPage.cshtml";
}

@using (var form = Html.Bootstrap().Form().SetId("form1").SetHorizontal().Begin())
{
    @Html.AntiForgeryToken()
    @Html.GetVSMWidgetsBegin(Translation.MIS.MISS01P001.ISSUE_CALCULATE)
    using (var row1 = Html.Bootstrap().GridRow().Begin())
    {
        using (row1.GridColumn(6).Begin())
        {
            @form.InputNumberFor(m => m.NO)
        }
        using (row1.GridColumn(6).Begin())
        {
            @form.InputFor(m => m.ISSUE_BY)
        }
    }
    using (var row1 = Html.Bootstrap().GridRow().Begin())
    {
        using (row1.GridColumn(6).Begin())
        {
            @form.DatepickerFor(m => m.ISSUE_DATE)
        }
        using (row1.GridColumn(6).Begin())
        {
            @form.InputFor(m => m.ISSUE_DATE_PERIOD).SetReadonly()
        }
    }
    using (var row1 = Html.Bootstrap().GridRow().Begin())
    {
        using (row1.GridColumn(6).Begin())
        {
            @form.InputJAutocompleteFor(t => t.MODULE, isRequired: true).JAutoKeySource("AC_xxxxxxxxxxx").JAutoBindField("MODULE").JAutoSetExtraParamsByCtrl("COM_CODE").JAutoFieldToInput(new
               {
                   RESPONSE_BY = "RESPONSE_BY"
               })
        }
        using (row1.GridColumn(6).Begin())
        {
            @form.TextAreaFor(m => m.DETAIL, 4)
        }
    }
    using (var row1 = Html.Bootstrap().GridRow().Begin())
    {
        using (row1.GridColumn(6).Begin())
        {
            @form.TextAreaFor(m => m.ROOT_CAUSE, 4)
        }
        using (row1.GridColumn(6).Begin())
        {
            @form.TextAreaFor(m => m.SOLUTION, 4)
        }
    }
    using (var row1 = Html.Bootstrap().GridRow().Begin())
    {
        using (row1.GridColumn(6).Begin())
        {
            @form.TextAreaFor(m => m.EFFECTS, 4)
        }
        using (row1.GridColumn(6).Begin())
        {
            @form.InputFor(m => m.RESPONSE_BY)
        }
    }
    using (var row1 = Html.Bootstrap().GridRow().Begin())
    {
        using (row1.GridColumn(6).Begin())
        {
            @form.DatepickerFor(m => m.TARGET_DATE)
        }
        using (row1.GridColumn(6).Begin())
        {
            @form.DatepickerFor(m => m.RESPONSE_DATE)
        }
    }
    using (var row1 = Html.Bootstrap().GridRow().Begin())
    {
        using (row1.GridColumn(6).Begin())
        {
            @form.DatepickerFor(m => m.RESPONSE_TARGET)
        }
        using (row1.GridColumn(6).Begin())
        {
            @form.DatepickerFor(m => m.ACTUAL_RESTIME_QA)
        }
    }
    using (var row1 = Html.Bootstrap().GridRow().Begin())
    {
        using (row1.GridColumn(6).Begin())
        {
            @form.DatepickerFor(m => m.ACTUAL_RESTIME_PD)
        }
        using (row1.GridColumn(6).Begin())
        {
            @form.DatepickerFor(m => m.ACTUAL_RESTIME_CL)
        }
    }
    using (var row1 = Html.Bootstrap().GridRow().Begin())
    {
        using (row1.GridColumn(6).Begin())
        {
            @form.DatepickerFor(m => m.RESOLUTION_TARGET)
        }
        using (row1.GridColumn(6).Begin())
        {
            @form.DatepickerFor(m => m.DEPLOY_QA)
        }
    }
    using (var row1 = Html.Bootstrap().GridRow().Begin())
    {
        using (row1.GridColumn(6).Begin())
        {
            @form.DatepickerFor(m => m.DEPLOY_PD)
        }
        using (row1.GridColumn(6).Begin())
        {
            @form.InputFor(m => m.FILE_ID)
        }
    }
    using (var row1 = Html.Bootstrap().GridRow().Begin())
    {
        using (row1.GridColumn(6).Begin())
        {
            @form.InputNumberFor(m => m.ESSR_NO)
        }
        using (row1.GridColumn(6).Begin())
        {
            @form.DatepickerFor(m => m.CLOSE_DATE)
        }
    }
    using (var row1 = Html.Bootstrap().GridRow().Begin())
    {
        using (row1.GridColumn(6).Begin())
        {
            @form.SelectFor(t => t.ISSUE_TYPE, Model.ISSUE_TYPE_MODEL.ToSelectList("Value", "Text", Model.ISSUE_TYPE), isRequired: true)
        }
        using (row1.GridColumn(6).Begin())
        {
            @form.SelectFor(t => t.DEFECT, Model.DEFECT_MODEL.ToSelectList("Value", "Text", Model.DEFECT), isRequired: true)
        }
    }
    using (var row1 = Html.Bootstrap().GridRow().Begin())
    {
        using (row1.GridColumn(6).Begin())
        {
            //autocomplete
            @form.SelectFor(t => t.PRIORITY, Model.ISSUE_TYPE_MODEL.ToSelectList("Value", "Text", Model.ISSUE_TYPE), isRequired: true)
        }
        using (row1.GridColumn(6).Begin())
        {
            @form.TextAreaFor(m => m.REMARK, 4)
        }
    }
    using (var row1 = Html.Bootstrap().GridRow().Begin())
    {
        using (row1.GridColumn(6).Begin())
        {
            @form.InputNumberFor(m => m.MAN_PLM_SA)
        }
        using (row1.GridColumn(6).Begin())
        {
            @form.InputNumberFor(m => m.MAN_PLM_QA)
        }
    }
    using (var row1 = Html.Bootstrap().GridRow().Begin())
    {
        using (row1.GridColumn(6).Begin())
        {
            @form.InputNumberFor(m => m.MAN_PLM_PRG)
        }
        using (row1.GridColumn(6).Begin())
        {
            @form.InputNumberFor(m => m.MAN_PLM_PL)
        }
    }
    using (var row1 = Html.Bootstrap().GridRow().Begin())
    {
        using (row1.GridColumn(6).Begin())
        {
            @form.InputFor(m => m.MAN_PLM_DBA)
        }
        using (row1.GridColumn(6).Begin())
        {
           @form.InputFileuploadFor(m => m.ISSUE_IMG, allowExt: "jpg,png")
        }
    }
    @Html.GetVSMWidgetsEnd()
}